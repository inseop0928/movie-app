{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","class","src","alt","className","map","genre","index","prototype","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","movies","add","setState","current","count","minus","getMovies","a","axios","get","data","console","log","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAKA,SAASA,EAAT,GAAqD,EAArCC,GAAsC,IAAnCC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAC7C,OACA,sBAAKC,MAAM,QAAX,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKO,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BP,IAC9B,oBAAIO,UAAU,cAAd,SAA6BR,IAC7B,oBAAIQ,UAAU,SAAd,SACKJ,EAAOK,KAAI,SAACC,EAAMC,GAAP,OACZ,oBAAiBH,UAAU,gBAA3B,SAA4CE,GAAlCC,QAEd,mBAAGH,UAAU,iBAAb,SAA+BN,UAKvCJ,EAAMc,UAAY,CACdb,GAAKc,IAAUC,OAAOC,WACtBf,KAAOa,IAAUC,OAAOC,WACxBd,MAAQY,IAAUG,OAAOD,WACzBb,QAAUW,IAAUG,OAAOD,WAC3BZ,OAAQU,IAAUG,OAAOD,WACzBX,OAAOS,IAAUI,QAAQJ,IAAUG,QAAQD,YAGhCjB,QCsDAoB,G,kNA7EbC,MAAO,CACLC,WAAU,EACVC,OAAO,I,EAGTC,IAAM,WAIJ,EAAKC,UAAS,SAAAC,GAAO,MAAI,CAACC,MAAMD,EAAQC,MAAM,O,EAGhDC,MAAQ,WAGN,EAAKH,SAAS,CAACE,MAAM,EAAKN,MAAMM,MAAM,K,EAGxCE,U,sBAAY,8BAAAC,EAAA,sEAE2BC,IAAMC,IAAI,4DAFrC,gBAEST,EAFT,EAEHU,KAAMA,KAAMV,OACnB,EAAKE,SAAS,CAACF,SAAOD,WAAU,IAEhCY,QAAQC,IAAIZ,GACZ,EAAKE,SAAS,CAACF,SAAOD,WAAU,IANtB,2C,kEASVc,KAAKP,YAGLK,QAAQC,IAAI,uB,2CAKdD,QAAQC,IAAI,Y,6CAGZD,QAAQC,IAAI,a,+BAGVD,QAAQC,IAAI,aADN,MAGqBC,KAAKf,MAAzBC,EAHD,EAGCA,UAAUC,EAHX,EAGWA,OAOjB,OAJiBa,KAAKf,MAAMM,MACXS,KAAKZ,IACLY,KAAKR,MAGpB,yBAASlB,UAAW,YAApB,SACCY,EACD,qBAAKZ,UAAW,SAAhB,SACE,sBAAMA,UAAW,eAAjB,0BAEA,qBAAKA,UAAU,SAAf,SACGa,EAAOZ,KAAI,SAAA0B,GAAK,OACf,cAAC,EAAD,CAEEpC,GAAKoC,EAAMpC,GACXC,KAAOmC,EAAMnC,KACbC,MAAQkC,EAAMlC,MACdC,QAAUiC,EAAMjC,QAChBC,OAASgC,EAAMC,mBACfhC,OAAS+B,EAAM/B,QANT+B,EAAMpC,e,GA5DRsC,IAAMC,YCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8202ea35.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n//app에서 값 설정\r\nfunction Movie({id,year,title,summary,poster,genres}){\r\nreturn (\r\n<div class=\"movie\">\r\n    <img src={poster} alt={title} title={title}/>\r\n    <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"genres\">\r\n            {genres.map((genre,index)=>(\r\n            <li key ={index} className=\"genres__genre\">{genre}</li>))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary}</p>\r\n    </div>\r\n</div>);\r\n}\r\n\r\nMovie.prototype = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster :PropTypes.string.isRequired,\r\n    genres:PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n\nclass App extends React.Component{\n  state ={\n    isLoading:true,\n    movies:[]\n  };\n\n  add = () => {\n    //this.state.count =1;\n    //alert(this.state.count);\n  \n    this.setState(current =>({count:current.count+1}));\n  }\n  \n  minus = () => {\n    //this.state.count =-1;\n    //alert(this.state.count);\n    this.setState({count:this.state.count-1});\n  }\n\n  getMovies = async () =>{\n    //const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies,isLoading:false})\n    \n    console.log(movies);\n    this.setState({movies,isLoading:false})\n  }\n componentDidMount(){\n    this.getMovies();\n    //setTimeout(()=>{this.setState({isLoading:false});},6000);\n    //alert(\"sksksk\");\n    console.log('componentDidMount');\n\n\n }\n componentDidUpdate(){\n  console.log('I just');\n}\ncomponentWillUnmount(){\n  console.log('GoodBye');\n}\n  render(){\n    console.log('lendering'); \n    \n    const {isLoading,movies} = this.state;\n    \n    <div>\n    <h1>Im Component{this.state.count}</h1>\n    <button onClick={this.add}>Add</button>\n    <button onClick={this.minus}>minus</button>\n    </div> \n    return (\n      <section className =\"container\">\n      {isLoading ?(\n      <div className =\"loader\">\n        <span className =\"loader__text\">Loading...</span>  \n      </div>):(\n        <div className=\"movies\">\n          {movies.map(movie =>(\n            <Movie\n              key ={movie.id}\n              id ={movie.id}\n              year ={movie.year}\n              title ={movie.title}\n              summary ={movie.summary}\n              poster ={movie.medium_cover_image}\n              genres ={movie.genres}\n              />\n            ))}\n\n        </div>\n        ) \n      }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}